/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Power, PowerInterface } from "../../../contracts/Bancor/Power";

const _abi = [
  {
    inputs: [],
    name: "power",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060400160405280600381526020017f302e330000000000000000000000000000000000000000000000000000000000815250600090816200004a9190620002d9565b503480156200005857600080fd5b50620003c0565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620000e157607f821691505b602082108103620000f757620000f662000099565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000122565b6200016d868362000122565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620001ba620001b4620001ae8462000185565b6200018f565b62000185565b9050919050565b6000819050919050565b620001d68362000199565b620001ee620001e582620001c1565b8484546200012f565b825550505050565b600090565b62000205620001f6565b62000212818484620001cb565b505050565b5b818110156200023a576200022e600082620001fb565b60018101905062000218565b5050565b601f82111562000289576200025381620000fd565b6200025e8462000112565b810160208510156200026e578190505b620002866200027d8562000112565b83018262000217565b50505b505050565b600082821c905092915050565b6000620002ae600019846008026200028e565b1980831691505092915050565b6000620002c983836200029b565b9150826002028217905092915050565b620002e4826200005f565b67ffffffffffffffff8111156200030057620002ff6200006a565b5b6200030c8254620000c8565b620003198282856200023e565b600060209050601f8311600181146200035157600084156200033c578287015190505b620003488582620002bb565b865550620003b8565b601f1984166200036186620000fd565b60005b828110156200038b5784890151825560018201915060208501945060208101905062000364565b86831015620003ab5784890151620003a7601f8916826200029b565b8355505b6001600288020188555050505b505050505050565b61185980620003d06000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a4d59fa1461003b57806354fd4d5014610045575b600080fd5b610043610063565b005b61004d611654565b60405161005a9190611772565b60405180910390f35b706bffffffffffffffffffffffffffffffff600160006080811061008a57610089611794565b5b01819055507067ffffffffffffffffffffffffffffffff600180608081106100b5576100b4611794565b5b018190555070637fffffffffffffffffffffffffffffff60016002608081106100e1576100e0611794565b5b0181905550705f6fffffffffffffffffffffffffffffff600160036080811061010d5761010c611794565b5b0181905550705b77ffffffffffffffffffffffffffffff600160046080811061013957610138611794565b5b01819055507057b3ffffffffffffffffffffffffffffff600160056080811061016557610164611794565b5b0181905550705419ffffffffffffffffffffffffffffff600160066080811061019157610190611794565b5b01819055507050a2ffffffffffffffffffffffffffffff60016007608081106101bd576101bc611794565b5b0181905550704d517fffffffffffffffffffffffffffff60016008608081106101e9576101e8611794565b5b0181905550704a233fffffffffffffffffffffffffffff600160096080811061021557610214611794565b5b01819055507047165fffffffffffffffffffffffffffff6001600a6080811061024157610240611794565b5b0181905550704429afffffffffffffffffffffffffffff6001600b6080811061026d5761026c611794565b5b018190555070415bc7ffffffffffffffffffffffffffff6001600c6080811061029957610298611794565b5b0181905550703eab73ffffffffffffffffffffffffffff6001600d608081106102c5576102c4611794565b5b0181905550703c1771ffffffffffffffffffffffffffff6001600e608081106102f1576102f0611794565b5b018190555070399e96ffffffffffffffffffffffffffff6001600f6080811061031d5761031c611794565b5b018190555070373fc47fffffffffffffffffffffffffff600160106080811061034957610348611794565b5b01819055507034f9e8ffffffffffffffffffffffffffff600160116080811061037557610374611794565b5b01819055507032cbfd5fffffffffffffffffffffffffff60016012608081106103a1576103a0611794565b5b01819055507030b5057fffffffffffffffffffffffffff60016013608081106103cd576103cc611794565b5b0181905550702eb40f9fffffffffffffffffffffffffff60016014608081106103f9576103f8611794565b5b0181905550702cc8340fffffffffffffffffffffffffff600160156080811061042557610424611794565b5b0181905550702af09481ffffffffffffffffffffffffff600160166080811061045157610450611794565b5b018190555070292c5bddffffffffffffffffffffffffff600160176080811061047d5761047c611794565b5b018190555070277abdcdffffffffffffffffffffffffff60016018608081106104a9576104a8611794565b5b01819055507025daf6657fffffffffffffffffffffffff60016019608081106104d5576104d4611794565b5b018190555070244c49c65fffffffffffffffffffffffff6001601a6080811061050157610500611794565b5b01819055507022ce03cd5fffffffffffffffffffffffff6001601b6080811061052d5761052c611794565b5b018190555070215f77c047ffffffffffffffffffffffff6001601c6080811061055957610558611794565b5b0181905550701fffffffffffffffffffffffffffffffff6001601d6080811061058557610584611794565b5b0181905550701eaefdbdabffffffffffffffffffffffff6001601e608081106105b1576105b0611794565b5b0181905550701d6bd8b2ebffffffffffffffffffffffff6001601f608081106105dd576105dc611794565b5b0181905550701c35fedd14ffffffffffffffffffffffff600160206080811061060957610608611794565b5b0181905550701b0ce43b323fffffffffffffffffffffff600160216080811061063557610634611794565b5b01819055507019f0028ec1ffffffffffffffffffffffff600160226080811061066157610660611794565b5b01819055507018ded91f0e7fffffffffffffffffffffff600160236080811061068d5761068c611794565b5b01819055507017d8ec7f0417ffffffffffffffffffffff60016024608081106106b9576106b8611794565b5b01819055507016ddc6556cdbffffffffffffffffffffff60016025608081106106e5576106e4611794565b5b01819055507015ecf52776a1ffffffffffffffffffffff600160266080811061071157610710611794565b5b01819055507015060c256cb2ffffffffffffffffffffff600160276080811061073d5761073c611794565b5b0181905550701428a2f98d72ffffffffffffffffffffff600160286080811061076957610768611794565b5b01819055507013545598e5c23fffffffffffffffffffff600160296080811061079557610794611794565b5b0181905550701288c4161ce1dfffffffffffffffffffff6001602a608081106107c1576107c0611794565b5b01819055507011c592761c666fffffffffffffffffffff6001602b608081106107ed576107ec611794565b5b018190555070110a688680a757ffffffffffffffffffff6001602c6080811061081957610818611794565b5b0181905550701056f1b5bedf77ffffffffffffffffffff6001602d6080811061084557610844611794565b5b0181905550700faadceceeff8bffffffffffffffffffff6001602e6080811061087157610870611794565b5b0181905550700f05dc6b27edadffffffffffffffffffff6001602f6080811061089d5761089c611794565b5b0181905550700e67a5a25da4107fffffffffffffffffff60016030608081106108c9576108c8611794565b5b0181905550700dcff115b14eedffffffffffffffffffff60016031608081106108f5576108f4611794565b5b0181905550700d3e7a392431239fffffffffffffffffff600160326080811061092157610920611794565b5b0181905550700cb2ff529eb71e4fffffffffffffffffff600160336080811061094d5761094c611794565b5b0181905550700c2d415c3db974afffffffffffffffffff600160346080811061097957610978611794565b5b0181905550700bad03e7d883f69bffffffffffffffffff60016035608081106109a5576109a4611794565b5b0181905550700b320d03b2c343d5ffffffffffffffffff60016036608081106109d1576109d0611794565b5b0181905550700abc25204e02828dffffffffffffffffff60016037608081106109fd576109fc611794565b5b0181905550700a4b16f74ee4bb207fffffffffffffffff6001603860808110610a2957610a28611794565b5b01819055507009deaf736ac1f569ffffffffffffffffff6001603960808110610a5557610a54611794565b5b0181905550700976bd9952c7aa957fffffffffffffffff6001603a60808110610a8157610a80611794565b5b01819055507009131271922eaa606fffffffffffffffff6001603b60808110610aad57610aac611794565b5b01819055507008b380f3558668c46fffffffffffffffff6001603c60808110610ad957610ad8611794565b5b0181905550700857ddf0117efa215bffffffffffffffff6001603d60808110610b0557610b04611794565b5b01819055507007ffffffffffffffffffffffffffffffff6001603e60808110610b3157610b30611794565b5b01819055507007abbf6f6abb9d087fffffffffffffffff6001603f60808110610b5d57610b5c611794565b5b018190555070075af62cbac95f7dfa7fffffffffffffff6001604060808110610b8957610b88611794565b5b018190555070070d7fb7452e187ac13fffffffffffffff6001604160808110610bb557610bb4611794565b5b01819055507006c3390ecc8af379295fffffffffffffff6001604260808110610be157610be0611794565b5b018190555070067c00a3b07ffc01fd6fffffffffffffff6001604360808110610c0d57610c0c611794565b5b0181905550700637b647c39cbb9d3d27ffffffffffffff6001604460808110610c3957610c38611794565b5b01819055507005f63b1fc104dbd39587ffffffffffffff6001604560808110610c6557610c64611794565b5b01819055507005b771955b36e12f7235ffffffffffffff6001604660808110610c9157610c90611794565b5b018190555070057b3d49dda84556d6f6ffffffffffffff6001604760808110610cbd57610cbc611794565b5b018190555070054183095b2c8ececf30ffffffffffffff6001604860808110610ce957610ce8611794565b5b018190555070050a28be635ca2b888f77fffffffffffff6001604960808110610d1557610d14611794565b5b01819055507004d5156639708c9db33c3fffffffffffff6001604a60808110610d4157610d40611794565b5b01819055507004a23105873875bd52dfdfffffffffffff6001604b60808110610d6d57610d6c611794565b5b0181905550700471649d87199aa990756fffffffffffff6001604c60808110610d9957610d98611794565b5b01819055507004429a21a029d4c1457cfbffffffffffff6001604d60808110610dc557610dc4611794565b5b0181905550700415bc6d6fb7dd71af2cb3ffffffffffff6001604e60808110610df157610df0611794565b5b01819055507003eab73b3bbfe282243ce1ffffffffffff6001604f60808110610e1d57610e1c611794565b5b01819055507003c1771ac9fb6b4c18e229ffffffffffff6001605060808110610e4957610e48611794565b5b0181905550700399e96897690418f785257fffffffffff6001605160808110610e7557610e74611794565b5b0181905550700373fc456c53bb779bf0ea9fffffffffff6001605260808110610ea157610ea0611794565b5b018190555070034f9e8e490c48e67e6ab8bfffffffffff6001605360808110610ecd57610ecc611794565b5b018190555070032cbfd4a7adc790560b3337ffffffffff6001605460808110610ef957610ef8611794565b5b018190555070030b50570f6e5d2acca94613ffffffffff6001605560808110610f2557610f24611794565b5b01819055507002eb40f9f620fda6b56c2861ffffffffff6001605660808110610f5157610f50611794565b5b01819055507002cc8340ecb0d0f520a6af58ffffffffff6001605760808110610f7d57610f7c611794565b5b01819055507002af09481380a0a35cf1ba02ffffffffff6001605860808110610fa957610fa8611794565b5b0181905550700292c5bdd3b92ec810287b1b3fffffffff6001605960808110610fd557610fd4611794565b5b0181905550700277abdcdab07d5a77ac6d6b9fffffffff6001605a6080811061100157611000611794565b5b018190555070025daf6654b1eaa55fd64df5efffffffff6001605b6080811061102d5761102c611794565b5b0181905550700244c49c648baa98192dce88b7ffffffff6001605c6080811061105957611058611794565b5b018190555070022ce03cd5619a311b2471268bffffffff6001605d6080811061108557611084611794565b5b0181905550700215f77c045fbe885654a44a0fffffffff6001605e608081106110b1576110b0611794565b5b01819055507001ffffffffffffffffffffffffffffffff6001605f608081106110dd576110dc611794565b5b01819055507001eaefdbdaaee7421fc4d3ede5ffffffff600160606080811061110957611108611794565b5b01819055507001d6bd8b2eb257df7e8ca57b09bfffffff600160616080811061113557611134611794565b5b01819055507001c35fedd14b861eb0443f7f133fffffff600160626080811061116157611160611794565b5b01819055507001b0ce43b322bcde4a56e8ada5afffffff600160636080811061118d5761118c611794565b5b018190555070019f0028ec1fff007f5a195a39dfffffff60016064608081106111b9576111b8611794565b5b018190555070018ded91f0e72ee74f49b15ba527ffffff60016065608081106111e5576111e4611794565b5b018190555070017d8ec7f04136f4e5615fd41a63ffffff600160666080811061121157611210611794565b5b018190555070016ddc6556cdb84bdc8d12d22e6fffffff600160676080811061123d5761123c611794565b5b018190555070015ecf52776a1155b5bd8395814f7fffff600160686080811061126957611268611794565b5b018190555070015060c256cb23b3b3cc3754cf40ffffff600160696080811061129557611294611794565b5b01819055507001428a2f98d728ae223ddab715be3fffff6001606a608081106112c1576112c0611794565b5b018190555070013545598e5c23276ccf0ede68034fffff6001606b608081106112ed576112ec611794565b5b01819055507001288c4161ce1d6f54b7f61081194fffff6001606c6080811061131957611318611794565b5b018190555070011c592761c666aa641d5a01a40f17ffff6001606d6080811061134557611344611794565b5b0181905550700110a688680a7530515f3e6e6cfdcdffff6001606e6080811061137157611370611794565b5b01819055507001056f1b5bedf75c6bcb2ce8aed428ffff6001606f6080811061139d5761139c611794565b5b01819055506ffaadceceeff8a0890f3875f008277fff60016070608081106113c8576113c7611794565b5b01819055506ff05dc6b27edad306388a600f6ba0bfff60016071608081106113f3576113f2611794565b5b01819055506fe67a5a25da41063de1495d5b18cdbfff600160726080811061141e5761141d611794565b5b01819055506fdcff115b14eedde6fc3aa5353f2e4fff600160736080811061144957611448611794565b5b01819055506fd3e7a3924312399f9aae2e0f868f8fff600160746080811061147457611473611794565b5b01819055506fcb2ff529eb71e41582cccd5a1ee26fff600160756080811061149f5761149e611794565b5b01819055506fc2d415c3db974ab32a51840c0b67edff60016076608081106114ca576114c9611794565b5b01819055506fbad03e7d883f69ad5b0a186184e06bff60016077608081106114f5576114f4611794565b5b01819055506fb320d03b2c343d4829abd6075f0cc5ff60016078608081106115205761151f611794565b5b01819055506fabc25204e02828d73c6e80bcdb1a95bf600160796080811061154b5761154a611794565b5b01819055506fa4b16f74ee4bb2040a1ec6c15fbbf2df6001607a6080811061157657611575611794565b5b01819055506f9deaf736ac1f569deb1b5ae3f36c130f6001607b608081106115a1576115a0611794565b5b01819055506f976bd9952c7aa957f5937d790ef650376001607c608081106115cc576115cb611794565b5b01819055506f9131271922eaa6064b73a22d0bd4f2bf6001607d608081106115f7576115f6611794565b5b01819055506f8b380f3558668c46c91c49a2f8e967b96001607e6080811061162257611621611794565b5b01819055506f857ddf0117efa215952912839f6473e66001607f6080811061164d5761164c611794565b5b0181905550565b60008054611661906117f2565b80601f016020809104026020016040519081016040528092919081815260200182805461168d906117f2565b80156116da5780601f106116af576101008083540402835291602001916116da565b820191906000526020600020905b8154815290600101906020018083116116bd57829003601f168201915b505050505081565b600081519050919050565b600082825260208201905092915050565b60005b8381101561171c578082015181840152602081019050611701565b60008484015250505050565b6000601f19601f8301169050919050565b6000611744826116e2565b61174e81856116ed565b935061175e8185602086016116fe565b61176781611728565b840191505092915050565b6000602082019050818103600083015261178c8184611739565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061180a57607f821691505b60208210810361181d5761181c6117c3565b5b5091905056fea2646970667358221220ad3a31ef47aaf1767edfe2e05f944ce148fc33f2183eef5fd5db863c7cf5736664736f6c63430008150033";

type PowerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PowerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Power__factory extends ContractFactory {
  constructor(...args: PowerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Power & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Power__factory {
    return super.connect(runner) as Power__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PowerInterface {
    return new Interface(_abi) as PowerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Power {
    return new Contract(address, _abi, runner) as unknown as Power;
  }
}
